<!DOCTYPE html>
<html lang="en">
  <head>

    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.5/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.5/dist/sweetalert2.all.min.js"></script>


    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.5/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.5/dist/sweetalert2.all.min.js"></script>

    <title>Aura-Men</title>


    <style>
        body {
          font-family: "Open Sans", sans-serif;
          background-color: #f8f9fa;
        }
  
        .container {
          margin-top: 50px;
        }
  
        .tracking-header {
          text-align: center;
          margin-bottom: 30px;
        }
  
        .tracking-header h1 {
          font-size: 26px;
          color: #333;
        }
  
        .tracking-header p {
          font-size: 14px;
          color: #666;
        }
  
        .tracking-progress {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 40px;
        }
  
        .tracking-step {
          text-align: center;
        }
  
        .tracking-step .icon {
          width: 50px;
          height: 50px;
          margin: 0 auto;
          background: #ddd;
          border-radius: 50%;
          display: flex;
          justify-content: center;
          align-items: center;
          font-size: 18px;
          color: white;
        }
  
        .tracking-step.active .icon {
          background: #007bff;
        }
  
        .tracking-step.completed .icon {
          background: #28a745;
        }
  
        .tracking-step p {
          margin-top: 10px;
          font-size: 14px;
          color: #333;
        }
  
        .tracking-line {
          flex-grow: 1;
          height: 4px;
          background: #ddd;
          position: relative;
        }
  
        .tracking-line.active {
          background: #007bff;
        }
  
        .tracking-line.completed {
          background: #28a745;
        }
  
        .order-details {
          background: white;
          border-radius: 8px;
          padding: 20px;
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
  
        .order-details h2 {
          font-size: 20px;
          color: #333;
          margin-bottom: 20px;
        }
  
        .order-info {
          margin-bottom: 10px;
          color: black;
        }
  
        .order-info span {
          font-weight: bold;
          color: black;
          font-size: 20px;
        }
  
        .product-list {
          margin-top: 15px;
        }
  
        .product-item {
          display: flex;
          align-items: center;
          margin-bottom: 15px;
        }
  
        .product-image {
          width: 150px;
          height: 150px;
          margin-right: 15px;
          border: 1px solid #ddd;
          border-radius: 4px;
          overflow: hidden;
        }
  
        .product-image img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
  
        .product-info {
          
          font-size: 14px;
          color: #666;
        }
  
        .product-info span {
          display: block;
          font-size: 20px;
          color: #333;
          font-weight: bold;
        }
        /* Modal Background */
.modal {
    display: none; 
    position: fixed; 
    z-index: 1; 
    left: 0;
    top: 0;
    width: 300px;
    height: 400px;
    background-color: rgba(0, 0, 0, 0.5);
}

/* Modal Content */
.modal-content {
    background-color: white;
    margin: 15% auto;
    padding: 20px;
    width: 100px;
    text-align: center;
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
}

/* Close Button */
.close {
    color: red;
    float: right;
    font-size: 28px;
    cursor: pointer;
}

      </style>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/css/open-iconic-bootstrap.min.css" />
    <link rel="stylesheet" href="/css/animate.css" />

    <link rel="stylesheet" href="/css/owl.carousel.min.css" />
    <link rel="stylesheet" href="/css/owl.theme.default.min.css" />
    <link rel="stylesheet" href="/css/magnific-popup.css" />

    <link rel="stylesheet" href="/css/aos.css" />

    <link rel="stylesheet" href="/css/ionicons.min.css" />

    <link rel="stylesheet" href="/css/bootstrap-datepicker.css" />
    <link rel="stylesheet" href="/css/jquery.timepicker.css" />

    <link rel="stylesheet" href="/css/flaticon.css" />
    <link rel="stylesheet" href="/css/icomoon.css" />
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <body class="goto-here">
    <div class="py-1 bg-black">
      <div class="container">
        <div
          class="row no-gutters d-flex align-items-start align-items-center px-md-0"
        >
          <div class="col-lg-12 d-block">
            <div class="row d-flex">
              <div class="col-md pr-4 d-flex topper align-items-center">
                <div
                  class="icon mr-2 d-flex justify-content-center align-items-center"
                >
                  <span class="icon-phone2"></span>
                </div>
                <span class="text">+ 1235 2355 98</span>
              </div>
              <div class="col-md pr-4 d-flex topper align-items-center">
                <div
                  class="icon mr-2 d-flex justify-content-center align-items-center"
                >
                  <span class="icon-paper-plane"></span>
                </div>
                <span class="text">youremail@email.com</span>
              </div>
              <div
                class="col-md-5 pr-4 d-flex topper align-items-center text-lg-right"
              >
                <span class="text"
                  >3-5 Business days delivery &amp; Free Returns</span
                >
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%-include('../partials/user/header.ejs')%>
    <!-- END nav -->

    <div
      class="hero-wrap hero-bread"
      style="background-image: url('/images/bg_6.jpg')"
    >
      <div class="container">
        <div
          class="row no-gutters slider-text align-items-center justify-content-center"
        >
          <div class="col-md-9 ftco-animate text-center">
            <p class="breadcrumbs">
              <span class="mr-2"><a href="/">Home</a></span>
              <span>Checkout</span>
            </p>
            <h1 class="mb-0 bread">Tracking</h1>
          </div>
        </div>
      </div>
    </div>



    <div class="container">
        <!-- Tracking Header -->
        <div class="tracking-header">
          <h1>Order Tracking</h1>
          <p>Track the progress of your order with ID:<strong><%= orders.orderId%></strong></p>
        </div>
  
        <!-- Tracking Progress -->
        <div class="tracking-progress">
          <!-- Order Placed -->
          <div class="tracking-step <%= orders.status === 'Order Placed' || orders.status !== 'Pending' ? 'completed' : '' %>">
            <div class="icon">âœ”</div>
            <p>Order Placed</p>
          </div>
          <div class="tracking-line <%= ['Order Processed', 'Shipped', 'Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed' : '' %>"></div>
        
          <!-- Order Processed -->
          <div class="tracking-step <%= ['Order Processed', 'Shipped', 'Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed' : '' %>">
            <div class="icon">âœ”</div>
            <p>Order Processed</p>
          </div>
          <div class="tracking-line <%= ['Shipped', 'Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed' : '' %>"></div>
        
          <!-- Shipped -->
          <div class="tracking-step <%= ['Shipped', 'Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed active' : '' %>">
            <div class="icon">ðŸšš</div>
            <p>Shipped</p>
          </div>
          <div class="tracking-line <%= ['Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed' : '' %>"></div>
        
          <!-- Out for Delivery -->
          <div class="tracking-step <%= ['Out for Delivery', 'Delivered'].includes(orders.status) ? 'completed' : '' %>">
            <div class="icon">ðŸ“¦</div>
            <p>Out for Delivery</p>
          </div>
          <div class="tracking-line <%= orders.status === 'Delivered' ? 'completed' : '' %>"></div>
        
          <!-- Delivered -->
          <div class="tracking-step <%= orders.status === 'Delivered' ? 'completed' : '' %>">
            <div class="icon">âœ”</div>
            <p>Delivered</p>
          </div>
        </div>        
        <!-- Order Details -->
        <div class="order-details">
          <h2>Order Details</h2>
          <div class="order-info">
            <p><span >Order ID:</span> <span> <%= orders.orderId%> </span></p>
            <p><span >payment Method:</span> <span> <%= orders.paymentMethod%> </span></p>
            <% if(orders.status === 'Pending Payment') {%>
            <p><span >Payment Status:</span> <span class="text text-danger" style="color: white;"><%= orders.status%></span></p>
              <button class="btn btn-info" id="retryPayment" onclick="retryPayment('<%= orders._id %>')">Retry Payment</button>
              <% } %>
            <p><span>Order Date:</span> <span> <%= new Date(orders.createdOn).toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            }) %> </span></p>
            <% if(address) {%>
            <p><span style="color: black;" >Delivery Address </span> <br> <span><%= address.phone %> <br> </span><span><%= address.name %> <br> </span><span><%= address.landMark %></span><br><span><%= address.city %></span><br> <span> <%= address.state %></span><br> <span><%= address.pincode %></span></p>
            <% } %>
          </div>
          <button class="btn btn-warning" onclick="invoiceDownload('<%= orders._id %>')">Get Invoice</button>
          <h3>Products</h3>
          <div class="product-list">
            <% for(let i=0;i<orders.orderedItems.length;i++) { %>
            <div class="product-item">
             
              <div class="product-image">
              <a href="/product-details/<%= orders.orderedItems[i].product._id %>">

                <img src="/uploads/<%= orders.orderedItems[i].product.productImage[0]%>" alt="Product 1" />
              </a>
              </div>
              <div class="product-info">
                <span>Product <%= i+1 %></span>
               <span>Product Name:<%= orders.orderedItems[i].product.productName %></span>
               <span>Quantity:<%= orders.orderedItems[i].quantity %></span>
             
              <span> Product Price:â‚¹<%= orders.orderedItems[i].price%></span>
              <% if(orders.status === 'Delivered' && orders.orderedItems[i].status !== 'Return Request' && orders.orderedItems[i].status !== 'Cancelled' &&  orders.orderedItems[i].status !== 'Returned' && orders.status !== 'Pending Payment'){ %>
                <button  class="btn btn-primary" style="background-color: #007bff;" id="return" onclick="returnReson('<%= orders.orderedItems[i]._id %>')" >Return</button> 
                <% }else if(orders.orderedItems[i].status === 'Return Request' || orders.orderedItems[i].status === 'Returned'){ %>
                  <span class="text-danger">Return request Addedd</span>  
                  
                  <% }else if(orders.orderedItems[i].status !== 'Cancelled' && orders.status !== 'Cancelled'  &&  orders.orderedItems[i].status !== 'Returned' && orders.status !== 'Pending Payment'){ %>
                    <span style="margin-left: 0px;">
                      <a href="/cancel/<%= orders._id %>/product/<%= orders.orderedItems[i]._id %>" 
                        class="btn btn-danger" 
                        style="color: white;" 
                        onclick="return confirmBlock(event)">
                       Cancel
                     </a>                                      
                    </span>
                    <% }else if(orders.status === 'Pending Payment' && orders.orderedItems[i].status !== 'Return Request' && orders.orderedItems[i].status !== 'Cancelled' &&  orders.orderedItems[i].status !== 'Returned') {%>
                      <span class="text-danger">Payment Pending</span>
                      <% }else{ %>
                      <span class="text-danger">Cancelled</span>
                      <% } %>
              </div>
            </div>
            <% } %>
          </div>
          <div>
            <span  style="color: black; font-size: 20px;">Discount:â‚¹<%= orders.couponDiscount %></span>
          </div>
          <span style="color: black; font-size: 20px;">Total Price:<%= orders.finalAmount %></span>     
        </div>
      </div>
    <!-- .section -->

    <%-include('../partials/user/footer.ejs')%>


    <div id="myModal" class="modal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">reason</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <input type="text" name="return" id="reason" placeholder="Share you return reason" style="width: 400px;">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary close" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="saveBtn" >Save changes</button>
          </div>
        </div>
      </div>
    </div>


    
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen">
      <svg class="circular" width="48px" height="48px">
        <circle
          class="path-bg"
          cx="24"
          cy="24"
          r="22"
          fill="none"
          stroke-width="4"
          stroke="#eeeeee"
        />
        <circle
          class="path"
          cx="24"
          cy="24"
          r="22"
          fill="none"
          stroke-width="4"
          stroke-miterlimit="10"
          stroke="#F96D00"
        />
      </svg>
    </div>

    <script src="/js/jquery.min.js"></script>
    <script src="/js/jquery-migrate-3.0.1.min.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/jquery.easing.1.3.js"></script>
    <script src="/js/jquery.waypoints.min.js"></script>
    <script src="/js/jquery.stellar.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/jquery.magnific-popup.min.js"></script>
    <script src="/js/aos.js"></script>
    <script src="/js/jquery.animateNumber.min.js"></script>
    <script src="/js/bootstrap-datepicker.js"></script>
    <script src="/js/scrollax.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
    <script src="/js/google-map.js"></script>
    <script src="/js/main.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
       function confirmBlock(event) {
        event.preventDefault();
        const href = event.target.href;
        Swal.fire({
            title: 'Are you sure?',
            text: "Are sure to cancel this order",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel!'
        }).then((result) => {
            if (result.isConfirmed) { 
              window.location.href = href;
            }
        });
        return false;
    }


  const modal = document.getElementById('myModal');
  const returnBtn = document.getElementById('return');
  const closeBtn = document.querySelector('.close');
  const saveBtn = document.getElementById('saveBtn');
  const reason = document.getElementById('reason');
   

  closeBtn.onclick = () =>{
    modal.style.display = 'none'
  }
const returnReson = (productId) =>{
   
  modal.style.display ='flex'
console.log('return product id is',productId)

  document.getElementById('saveBtn').addEventListener('click',()=>{
    const response = document.getElementById('reason').value;
    console.log(response);
    
    if(response.trim() === ''){
      alert('plase fill the reason')
    }else{
      fetch(`/orderReturn?orderId=<%= orders._id %>&&reason=${response}&&productId=${productId}`,{
        method:'GET'
      })
      .then(response=>response.json())
      .then(data=>{
        if(data.success){
          swal.fire({
            title:'Return request',
            text:data.message,
            
          })
          modal.style.display = 'none'
          const queryString = new URLSearchParams(orders).toString();
          window.location.href = redirectUrl

        }else{
          swal.fire({
            title:'Error',
            text:'Return Error'
          })
        }
      })
    }
      
  })


}

const retryPayment = async (orderId) => {
  try {
    console.log(orderId)
    const response = await fetch('/retry-payment', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ orderId }),
    });

    const data = await response.json();
    console.log(data)
    if (data.success) {
      const razorPayOptions = {
        key: data.key,
        amount: data.amount,
        currency: "INR",
        order_id: data.razorpay_order_id,
        orderId:data.id,
        handler: async function (response) {
          console.log("Payment Success Response:", response);

          const verifyResponse = await fetch('/verifyPayment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              amount: data.amount,
              order_id: data.razorpay_order_id,
              payment_id: response.razorpay_payment_id,
              signature: response.razorpay_signature,
              orderId:data.id,
            }),
          });

          const redata = await verifyResponse.json();
          console.log('Payment Verification Response:', redata);
          if(redata.success){
            swal.fire({
              title:'success',
              text:redata.message,
              icon:'success'
            })
          }else{
            swal.fire({
              title:'success',
              text:'Payment verification error',
              icon:'error'
            })
          }
        },
      };

      const rzp = new Razorpay(razorPayOptions);
      rzp.open();
    } else {
      alert('Unable to open Razorpay');
    }
  } catch (error) {
    console.error('Error during retry payment:', error);
    swa.fire({
      title:'error',
      text:"paymment error occurred"
    })
  }
};


const invoiceDownload = async (orderId)=>{
 console.log('order id is',orderId);

 try {
  const response = await fetch (`/downloadInvoice?orderId=${orderId}`)
  console.log('response is',response);
  const blob = await response.blob();

        // Create a URL for the file and trigger the download
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = `invoice-${orderId}.pdf`;
        document.body.appendChild(a);
        a.click();
        a.remove();
        
 } catch (error) {
  
 }
}

    </script>
  </body>
</html>
